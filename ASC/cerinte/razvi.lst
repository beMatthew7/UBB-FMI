     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fscanf, printf , fprintf              ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import fscanf msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  import fprintf msvcrt.dll     ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    13                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17                                      ; ...
    18 00000000 616263646566676800          sir db "abcdefgh", 0
    19 00000009 7200                        acces_mode_r db "r", 0
    20 0000000B 7700                        acces_mode_w db "w", 0
    21 0000000D 72617A76692E747874-         file_name_r db "razvi.txt", 0
    21 00000016 00                 
    22 00000017 FFFFFFFF                    file_descriptor_r dd -1
    23 0000001B 00000000                    n dd 0
    24 0000001F 6669736965725F692E-         file_name_w db"fisier_i.txt", 0
    24 00000028 74787400           
    25 0000002C 256300                      format_citire db "%c", 0
    26 0000002F FFFFFFFF                    file_descriptor_w dd -1
    27 00000033 257300                      format_afisare db "%s", 0
    28                                      
    29                                  
    30                                  ; our code starts here
    31                                  segment code use32 class=code
    32                                      start:
    33                                          ; ...
    34 00000000 68[09000000]                    push acces_mode_r
    35 00000005 68[0D000000]                    push file_name_r
    36 0000000A FF15[00000000]                  call [fopen]
    37 00000010 83C408                          add esp, 2 *4
    38                                          
    39 00000013 83F800                          cmp eax, 0
    40 00000016 0F849B000000                    je final
    41                                          
    42 0000001C A3[17000000]                    mov [file_descriptor_r], eax
    43                                          
    44 00000021 68[1B000000]                    push n
    45 00000026 68[2C000000]                    push format_citire
    46 0000002B FF35[17000000]                  push dword [file_descriptor_r]
    47 00000031 FF15[00000000]                  call [fscanf]
    48 00000037 83C40C                          add esp, 3 * 4
    49                                          
    50 0000003A 8B1D[1B000000]                  mov ebx, [n]
    51 00000040 83EB30                          sub ebx, '0'
    52 00000043 B908000000                      mov ecx, 8
    53 00000048 29D9                            sub ecx, ebx
    54 0000004A 8DB1[00000000]                  lea esi,[sir + ecx]
    55                                          repeta:
    56 00000050 8A1D[1B000000]                      mov bl, [n]
    57 00000056 881D[26000000]                      mov [file_name_w + 7], bl
    58                                          
    59 0000005C 68[0B000000]                        push acces_mode_w
    60 00000061 68[1F000000]                        push file_name_w
    61 00000066 FF15[00000000]                      call [fopen]
    62 0000006C 83C408                              add esp, 2 * 4
    63                                              
    64 0000006F 83F800                              cmp eax, 0
    65 00000072 7443                                je final
    66 00000074 A3[2F000000]                        mov dword[file_descriptor_w], eax
    67                                              
    68 00000079 56                                  push esi
    69 0000007A 68[33000000]                        push format_afisare
    70 0000007F FF35[2F000000]                      push dword[file_descriptor_w]
    71 00000085 FF15[00000000]                      call [fprintf]
    72 0000008B 83C40C                              add esp, 3 * 4
    73 0000008E 46                                  inc esi
    74                                              
    75 0000008F 832D[1B000000]01                    sub dword[n], 1
    76 00000096 8A1D[1B000000]                      mov bl, [n]
    77 0000009C 80FB30                              cmp bl, '0'
    78 0000009F 7416                                je final
    79 000000A1 EBAD                                jmp repeta
    80                                              
    81                                              
    82                                              
    83 000000A3 FF35[1B000000]                  push dword[n]
    84 000000A9 68[2C000000]                    push format_citire
    85 000000AE FF15[00000000]                  call[printf]
    86 000000B4 83C408                          add esp, 2 * 4
    87                                          
    88                                          
    89                                          
    90                                          
    91                                          
    92                                          
    93                                          final:
    94                                          
    95                                      
    96                                          ; exit(0)
    97 000000B7 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    98 000000B9 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
