     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, fopen               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import fopen msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 00<rept>                    file_name times 50 db 0
    17 00000032 7700                        acces_mode db 'w', 0
    18 00000034 257300                      format_citire db "%s", 0
    19                                      
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24 00000000 68[00000000]                    push file_name
    25 00000005 68[34000000]                    push format_citire
    26 0000000A FF15[00000000]                  call [scanf]
    27 00000010 83C408                          add esp, 2 * 4
    28                                          
    29 00000013 BE[00000000]                    mov esi, file_name
    30                                          
    31                                          citire_nume:
    32 00000018 AC                                  lodsb
    33 00000019 3C00                                cmp al, 0
    34 0000001B 7402                                je concatenare
    35 0000001D EBF9                                jmp citire_nume
    36                                              
    37                                          concatenare:
    38 0000001F 4E                                  dec esi
    39 00000020 89F7                                mov edi, esi
    40 00000022 B02E                                mov al, '.'
    41 00000024 AA                                  stosb
    42 00000025 B074                                mov al, 't'
    43 00000027 AA                                  stosb
    44 00000028 B078                                mov al, 'x'
    45 0000002A AA                                  stosb
    46 0000002B B074                                mov al, 't'
    47 0000002D AA                                  stosb
    48                                              
    49 0000002E 68[32000000]                    push acces_mode
    50 00000033 68[00000000]                    push file_name
    51 00000038 FF15[00000000]                  call [fopen]
    52 0000003E 83C408                          add esp, 2 * 4
    53                                              
    54                                      
    55                                          ; exit(0)
    56 00000041 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    57 00000043 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
