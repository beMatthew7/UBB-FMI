     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=dataa
    13 00000000 0519377F                    s db 5, 25, 55, 127  
    14                                      len equ ($-s)         
    15 00000004 <res 00000004>              d resb len            
    16                                  
    17                                  segment code use32 class=code
    18                                      start:
    19 00000000 B904000000                      mov ECX, len       
    20 00000005 BE[00000000]                    mov ESI, s         
    21 0000000A BF[04000000]                    mov EDI, d         
    22                                  
    23 0000000F E31D                            jecxz final        
    24                                          
    25 00000011 FC                              cld                
    26                                      procesare:
    27 00000012 AC                              lodsb              ; Incarcam un octet din s in AL
    28 00000013 B300                            mov BL, 0      
    29 00000015 88C2                            mov DL, AL         
    30                                  
    31 00000017 51                              push ecx
    32                                          
    33 00000018 B908000000                      mov ecx, 8
    34                                      numara_biti:
    35                                      
    36 0000001D 80E201                          and DL, 1          
    37 00000020 00D3                            add BL, DL         
    38 00000022 D0E8                            shr AL, 1 
    39 00000024 88C2                            mov dl, al
    40 00000026 E2F5                            loop numara_biti   
    41                                          
    42 00000028 59                              pop ECX
    43                                          
    44 00000029 88D8                            mov al, bl
    45 0000002B AA                              stosb              ; Salvam contorul (BL) in d
    46 0000002C E2E4                            loop procesare     
    47                                          
    48                                      final:
    49 0000002E 6A00                            push    dword 0    ; push the parameter for exit onto the stack
    50 00000030 FF15[00000000]                  call    [exit]     ; call exit to terminate the program
