     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll   ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 00000000                    a dd 0
    17 00000004 00000000                    b dd 0
    18 00000008 0200                        k dw 2
    19 0000000A 2564256400                  format_citire db "%d%d", 0
    20 0000000F 257800                      format_afisare db '%x', 0
    21                                      
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 68[00000000]                    push a
    27 00000005 68[04000000]                    push b
    28 0000000A 68[0A000000]                    push format_citire
    29 0000000F FF15[00000000]                  call [scanf]
    30 00000015 83C40C                          add esp, 3 * 4
    31 00000018 66A1[00000000]                  mov ax, [a]
    32 0000001E 662B05[04000000]                sub ax, [b]
    33                                          
    34 00000025 668B15[08000000]                mov dx, [k]
    35                                          
    36 0000002C 66F7E2                          mul dx
    37                                          
    38 0000002F 6652                            push dx
    39 00000031 6650                            push ax
    40 00000033 58                              pop eax
    41                                          
    42 00000034 50                              push eax
    43 00000035 68[0F000000]                    push format_afisare
    44 0000003A FF15[00000000]                  call [printf]
    45 00000040 83C408                          add esp, 2 * 4
    46                                          
    47                                          
    48                                          
    49                                          ; exit(0)
    50 00000043 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    51 00000045 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
