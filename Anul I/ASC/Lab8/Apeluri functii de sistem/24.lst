     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll   ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 00000000                    a dd 0
    17 00000004 00000000                    b dd 0
    18 00000008 02000000                    k dd 2
    19 0000000C 2564256400                  format db "%d%d", 0
    20 00000011 256400                      format_afisare db "%d", 0
    21                                      
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 68[00000000]                    push a
    27 00000005 68[04000000]                    push b
    28 0000000A 68[0C000000]                    push format
    29 0000000F FF15[00000000]                  call [scanf]
    30 00000015 83C40C                          add esp, 4 * 3
    31                                  
    32 00000018 A1[00000000]                    mov eax, [a]
    33 0000001D 66BA0000                        mov dx, 0
    34                                          
    35 00000021 668B1D[04000000]                mov bx, [b]
    36                                          
    37 00000028 66F7F3                          div bx
    38                                          
    39 0000002B 66F725[08000000]                mul word[k]
    40                                   
    41                                          
    42 00000032 50                              push eax
    43 00000033 68[11000000]                    push format_afisare
    44 00000038 FF15[00000000]                  call [printf]
    45 0000003E 83C408                          add esp,  4 * 2
    46                                          
    47                                          
    48                                          
    49                                          ; exit(0)
    50 00000041 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    51 00000043 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
    52                                  
