     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14 00000000 00000000                	a dd 0
    15 00000004 00000000                	b dd 0
    16 00000008 2578257800              	format_hexa db "%x%x", 0
    17 0000000D 256400                  	format_d db "%d", 0
    18                                      ; ...
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23 00000000 68[00000000]            		push dword a
    24 00000005 68[04000000]            		push dword b
    25 0000000A 68[08000000]            		push dword format_hexa
    26 0000000F FF15[00000000]          		call [scanf]
    27 00000015 83C40C                  		add esp, 4 * 3
    28                                  
    29 00000018 A1[00000000]            		mov eax, [a]
    30 0000001D 0305[04000000]          		add eax, [b]
    31                                          
    32 00000023 BA00000000                      mov edx, 0
    33 00000028 BB02000000                      mov ebx, 2
    34 0000002D F7F3                            div ebx
    35                                  		
    36 0000002F 50                      		push eax
    37 00000030 68[0D000000]            		push dword format_d
    38 00000035 FF15[00000000]          		call [printf]
    39 0000003B 83C408                  		add esp, 4 * 2
    40                                          ; ...
    41                                      
    42                                          ; exit(0)
    43 0000003E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    44 00000040 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
