     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll   ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 00000000                    a dd 0
    17 00000004 257800                      format db "%x", 0
    18 00000007 25642020256400              format_afisare db "%d  %d", 0
    19                                      
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24 00000000 68[00000000]                    push a 
    25 00000005 68[04000000]                    push format
    26 0000000A FF15[00000000]                  call [scanf]
    27 00000010 83C408                          add esp, 4 * 2
    28                                          
    29 00000013 A0[00000000]                    mov al, [a]
    30 00000018 6698                            cbw
    31 0000001A 98                              cwde
    32                                          
    33                                  
    34 0000001B BB00000000                      mov ebx, 0
    35 00000020 8A1D[00000000]                  mov bl, [a]
    36                                          
    37 00000026 50                              push eax
    38 00000027 53                              push ebx
    39 00000028 68[07000000]                    push format_afisare
    40 0000002D FF15[00000000]                  call [printf]
    41 00000033 83C40C                          add esp, 4 * 3
    42                                          ; exit(0)
    43 00000036 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    44 00000038 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
