     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 07                          a db 7
    15 00000001 C1                          b db 193
    16 00000002 32                          c db 50
    17 00000003 C800                        d dw 200
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 A0[00000000]                    mov al, [a] ;al = [a]
    24 00000005 0205[01000000]                  add al, [b] ; al = [a] + [b]
    25 0000000B 8A0D[02000000]                  mov cl, [c] ; cl = [c]
    26 00000011 00C9                            add cl, cl ; cl = [c] + [c]
    27 00000013 28C8                            sub al, cl  ; al = al - cl
    28 00000015 88C3                            mov bl, al  ; bl = al
    29 00000017 66A1[03000000]                  mov ax, [d]  
    30                                          
    31                                                    
    32                                          
    33 0000001D F6F3                            div bl
    34                                          
    35                                          
    36                                          
    37                                          
    38                                  
    39                                          ; exit(0)
    40 0000001F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    41 00000021 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
