     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 07                          a db 7
    15 00000001 14                          b db 20
    16 00000002 0A                          c db 10
    17 00000003 13                          d db 19
    18 00000004 7900                        e dw 121
    19 00000006 2C01                        f dw 300
    20 00000008 4F00                        g dw 79
    21 0000000A B001                        h dw 432
    22                                  
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26                                          ; ...
    27 00000000 668B1D[04000000]                mov bx, [e]
    28 00000007 66031D[06000000]                add bx, [f]
    29 0000000E 662B1D[08000000]                sub bx, [g]
    30 00000015 A0[01000000]                    mov al, [b]
    31 0000001A 0205[02000000]                  add al, [c]
    32 00000020 B103                            mov cl, 3
    33 00000022 F6E1                            mul cl
    34 00000024 6601D8                          add ax, bx
    35 00000027 66B90500                        mov cx, 5
    36 0000002B 66F7E1                          mul cx
    37 0000002E 6652                            push dx
    38 00000030 6650                            push ax
    39 00000032 58                              pop eax
    40                                          
    41                                          
    42                                          
    43                                          
    44                                          
    45                                  
    46                                          ; exit(0)
    47 00000033 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    48 00000035 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
