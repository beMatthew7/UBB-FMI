     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  import printf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14                                      ; ...
    15 00000000 7B0000000000000001-         sir dq 123, 312321,312312321
    15 00000009 C40400000000000182-
    15 00000012 9D1200000000       
    16                                      len equ $ - sir
    17 00000018 25622000                    format_afisare db "%b ", 0
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 BE[00000000]                    mov esi, sir
    23 00000005 BB18000000                      mov ebx, len
    24                                          afisare_bytes:
    25 0000000A B800000000                          mov eax, 0
    26 0000000F AC                                  lodsb
    27 00000010 50                                  push eax
    28 00000011 68[18000000]                        push format_afisare
    29 00000016 FF15[00000000]                      call [printf]
    30 0000001C 83C408                              add esp, 2 * 4
    31 0000001F 4B                                  dec ebx
    32 00000020 83FB00                              cmp ebx, 0
    33 00000023 7402                                je final
    34 00000025 EBE3                                jmp afisare_bytes
    35                                              
    36                                              
    37                                              
    38                                          
    39                                          final:
    40                                          ; exit(0)
    41 00000027 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    42 00000029 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
