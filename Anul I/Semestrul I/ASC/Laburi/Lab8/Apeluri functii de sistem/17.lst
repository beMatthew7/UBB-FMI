     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14 00000000 00000000                	a dd 0
    15 00000004 00000000                	b dd 0
    16 00000008 256400                  	format_hexa db "%d", 0
    17 0000000B 257800                  	format_d db "%x", 0
    18                                      ; ...
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23 00000000 68[00000000]            		push dword a
    24 00000005 68[08000000]            		push dword format_hexa
    25 0000000A FF15[00000000]          		call [scanf]
    26 00000010 83C408                  		add esp, 4 * 2
    27                                  
    28 00000013 A1[00000000]            		mov eax, [a]
    29 00000018 0305[04000000]          		add eax, [b]
    30                                          
    31                                    
    32 0000001E 50                      		push eax
    33 0000001F 68[0B000000]            		push dword format_d
    34 00000024 FF15[00000000]          		call [printf]
    35 0000002A 83C408                  		add esp, 4 * 2
    36                                          ; ...
    37                                      
    38                                          ; exit(0)
    39 0000002D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    40 0000002F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
