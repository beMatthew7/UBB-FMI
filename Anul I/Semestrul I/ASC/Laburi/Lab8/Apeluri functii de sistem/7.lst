     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 00000000                    a dd 0
    17 00000004 0000                        b dw 0
    18 00000006 256400                      format_citire db '%d', 0
    19 00000009 2564206D6F64202564-         format_afisare db "%d mod %d = %d", 0
    19 00000012 203D20256400       
    20 00000018 00000000                    rest1 dd 0
    21                                  
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 68[00000000]                    push a
    27 00000005 68[06000000]                    push format_citire
    28 0000000A FF15[00000000]                  call [scanf]
    29                                          
    30 00000010 68[04000000]                    push b
    31 00000015 68[06000000]                    push format_citire
    32 0000001A FF15[00000000]                  call [scanf]
    33                                          
    34 00000020 66A1[00000000]                  mov ax, [a]
    35 00000026 668B15[02000000]                mov dx, [a+2]
    36 0000002D 668B1D[04000000]                mov bx, [b]
    37                                          
    38 00000034 66F7F3                          div bx
    39 00000037 668915[18000000]                mov [rest1], dx
    40 0000003E 66A1[04000000]                  mov ax, [b]
    41 00000044 98                              cwde
    42                                          
    43 00000045 FF35[18000000]                  push dword [rest1]
    44 0000004B 50                              push eax
    45 0000004C FF35[00000000]                  push dword [a]
    46 00000052 68[09000000]                    push format_afisare
    47 00000057 FF15[00000000]                  call [printf]
    48 0000005D 83C40C                          add esp, 4 * 3
    49                                          ; exit(0)
    50 00000060 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    51 00000062 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
