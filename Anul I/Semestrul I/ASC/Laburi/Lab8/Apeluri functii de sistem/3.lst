     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 00000000                    a dd 0
    17 00000004 00000000                    b dd 0
    18 00000008 256400                      format_citire db '%d', 0
    19 0000000B 2564202B202564203D-         format_afisare db "%d + %d = %d", 0
    19 00000014 20256400           
    20 00000018 00000000                    rezultat dd 0
    21                                  
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 68[00000000]                    push a
    27 00000005 68[08000000]                    push format_citire
    28 0000000A FF15[00000000]                  call [scanf]
    29 00000010 83C408                          add esp, 4 * 2
    30                                          
    31 00000013 68[04000000]                    push b
    32 00000018 68[08000000]                    push format_citire
    33 0000001D FF15[00000000]                  call [scanf]
    34 00000023 83C408                          add esp, 4 * 2
    35                                          
    36 00000026 A1[00000000]                    mov eax, [a]
    37 0000002B 0305[04000000]                  add eax, [b]
    38                                              
    39                                  
    40 00000031 A3[18000000]                    mov [rezultat], eax
    41                                          
    42 00000036 FF35[18000000]                  push dword [rezultat]
    43 0000003C FF35[04000000]                  push dword [b]
    44 00000042 FF35[00000000]                  push dword [a]
    45 00000048 68[0B000000]                    push format_afisare
    46 0000004D FF15[00000000]                  call [printf]
    47 00000053 83C410                          add esp, 4 * 4
    48                                          
    49                                          
    50                                          ; exit(0)
    51 00000056 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    52 00000058 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
