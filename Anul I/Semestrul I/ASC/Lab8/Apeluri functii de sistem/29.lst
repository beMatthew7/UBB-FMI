     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 00000000                    a dd 0
    17 00000004 00000000                    m dd 0
    18 00000008 00000000                    n dd 0
    19 0000000C 256420256420256400          format_citire db "%d %d %d", 0
    20 00000015 256400                      format_afisare db "%d", 0
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ; ...
    25 00000000 68[08000000]                    push n
    26 00000005 68[04000000]                    push m
    27 0000000A 68[00000000]                    push a
    28 0000000F 68[0C000000]                    push format_citire
    29 00000014 FF15[00000000]                  call [scanf]
    30 0000001A 83C410                          add esp, 4 * 4
    31 0000001D A1[00000000]                    mov eax, [a]
    32 00000022 B91F000000                      mov ecx, 31
    33 00000027 2B0D[04000000]                  sub ecx, [m]
    34                                          
    35                                          repeta1:
    36 0000002D D1E0                            shl eax, 1
    37                                          
    38                                          
    39 0000002F E2FC                            loop repeta1
    40                                          
    41 00000031 8B0D[08000000]                  mov ecx, [n]
    42                                          repeta2:
    43 00000037 D1E8                            shr eax, 1
    44 00000039 E2FC                            loop repeta2
    45                                  
    46                                          
    47 0000003B 50                              push eax
    48 0000003C 68[15000000]                    push format_afisare
    49 00000041 FF15[00000000]                  call [printf]
    50 00000047 83C408                          add esp, 4 * 2
    51                                          
    52                                          
    53                                          
    54                                          ; exit(0)
    55 0000004A 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    56 0000004C FF15[00000000]                  call    [exit]       ; call exit to terminate the program
