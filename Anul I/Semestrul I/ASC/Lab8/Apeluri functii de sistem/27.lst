     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll   ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 61646A6B616A736E61-         sir_caractere db  "adjkajsnanld"
    16 00000009 6E6C64             
    17 0000000C 0C000000                    len dd $ - sir_caractere
    18 00000010 256300                      format_citire db "%c", 0
    19 00000013 256320256400                format_afisare db "%c %d", 0
    20 00000019 00000000                    nr_aparitii dd 0
    21 0000001D 00000000                    caracter dd 0
    22                                      
    23                                      
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27                                          ; ...
    28                                         
    29 00000000 68[1D000000]                    push caracter
    30 00000005 68[10000000]                    push format_citire
    31 0000000A FF15[00000000]                  call [scanf]
    32 00000010 83C408                          add esp, 2 * 4
    33 00000013 BE[00000000]                    mov esi, sir_caractere
    34 00000018 8B0D[0C000000]                  mov ecx, [len]
    35                                          
    36                                         
    37                                          
    38                                          repeta:
    39 0000001E 8A1D[1D000000]                  mov bl, [caracter]
    40 00000024 AC                              lodsb
    41 00000025 38D8                            cmp al, bl
    42 00000027 750D                            jne nu_egal
    43 00000029 A1[19000000]                    mov eax, [nr_aparitii]
    44 0000002E 83C001                          add eax, 1
    45 00000031 A3[19000000]                    mov [nr_aparitii], eax
    46                                          
    47                                          
    48                                          nu_egal:
    49 00000036 E2E6                            loop repeta
    50                                          
    51 00000038 FF35[19000000]                  push dword [nr_aparitii]
    52 0000003E FF35[1D000000]                  push dword [caracter]
    53 00000044 68[13000000]                    push format_afisare
    54 00000049 FF15[00000000]                  call [printf]
    55 0000004F 83C40C                          add esp, 3 * 4
    56                                          ; exit(0)
    57 00000052 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    58 00000054 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
