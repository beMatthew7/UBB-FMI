     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, fopen, fprintf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import fopen msvcrt.dll
    11                                  import fprintf  msvcrt.dll   ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    12                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 00000000                    n dd 0
    18 00000004 256400                      format_citire_d db  "%d", 0
    19 00000007 257300                      format_citire_s db "%s", 0
    20 0000000A 00<rept>                    cuvant times 50 db 0
    21 0000003C 7700                        acces_mode db "w", 0
    22 0000003E 746578742E74787400          file_name db "text.txt", 0
    23 00000047 FFFFFFFF                    file_descriptor dd -1
    24 0000004B 25730A00                    format_afisare db "%s", 10, 0
    25                                      
    26                                  
    27                                  ; our code starts here
    28                                  segment code use32 class=code
    29                                      start:
    30                                          ; ...
    31                                          citire_n:
    32 00000000 68[00000000]                        push n
    33 00000005 68[04000000]                        push format_citire_d
    34 0000000A FF15[00000000]                      call [scanf]
    35 00000010 83C408                              add esp, 2 * 4
    36                                              
    37                                          deschidere_fisier:
    38 00000013 68[3C000000]                        push acces_mode
    39 00000018 68[3E000000]                        push file_name
    40 0000001D FF15[00000000]                      call [fopen]
    41 00000023 83C408                              add esp, 2 * 4
    42                                              
    43 00000026 83F800                              cmp eax, 0
    44 00000029 7459                                je eroare
    45 0000002B A3[47000000]                        mov dword[file_descriptor], eax
    46                                              
    47                                          citire_cuvinte:
    48 00000030 68[0A000000]                        push cuvant
    49 00000035 68[07000000]                        push format_citire_s
    50 0000003A FF15[00000000]                      call [scanf]
    51 00000040 83C408                              add esp, 2 * 4
    52                                              
    53 00000043 BE[0A000000]                        mov esi, cuvant
    54                                              inceput_cuvant:
    55 00000048 89F7                                    mov edi, esi
    56                                              citire_caracter_cu_caracter:
    57 0000004A AC                                      lodsb
    58 0000004B 3C23                                    cmp al, '#'
    59 0000004D 7435                                    je final
    60 0000004F 3C00                                    cmp al, 0
    61 00000051 7402                                    je verificare_cuvant
    62 00000053 EBF5                                    jmp citire_caracter_cu_caracter
    63                                                  
    64                                                  
    65                                                  verificare_cuvant:
    66 00000055 4E                                          dec esi
    67 00000056 89F0                                        mov eax, esi
    68 00000058 29F8                                        sub eax, edi
    69 0000005A 4E                                          dec esi
    70                                                      
    71 0000005B 3B05[00000000]                              cmp eax, dword[n]
    72 00000061 721D                                        jb continua
    73 00000063 8A06                                        mov al, byte[esi]
    74 00000065 8A27                                        mov ah, byte[edi]
    75                                                      
    76 00000067 38E0                                        cmp al, ah
    77 00000069 7515                                        jne continua
    78 0000006B 57                                          push  edi
    79 0000006C 68[4B000000]                                push format_afisare
    80 00000071 FF35[47000000]                              push dword [file_descriptor]
    81 00000077 FF15[00000000]                              call [fprintf]
    82 0000007D 83C40C                                      add esp, 3 * 4
    83                                                      
    84                                                      
    85                                                      
    86                                                      
    87                                                      continua:
    88 00000080 46                                          inc esi
    89 00000081 46                                          inc esi
    90 00000082 EBAC                                        jmp citire_cuvinte
    91                                              
    92                                              
    93                                          eroare: 
    94                                          final:
    95                                              
    96                                              
    97                                      
    98                                          ; exit(0)
    99 00000084 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   100 00000086 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
